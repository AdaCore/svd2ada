<?xml version="1.0" encoding="utf-8"?>

<!-- File naming: <vendor>_<part/series name>.svd -->

<!--
  Copyright (C) 2012 ARM Limited. All rights reserved.

  Purpose: System Viewer Description (SVD) Example (Schema Version 1.1)
           This is a description of a none-existent and incomplete device
		   for demonstration purposes only.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.
   - Neither the name of ARM nor the names of its contributors may be used
     to endorse or promote products derived from this software without
     specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.
 -->

<device schemaVersion="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd" >
  <vendor>ARM Ltd.</vendor>                                       <!-- device vendor name -->
  <vendorID>ARM</vendorID>                                        <!-- device vendor short name -->
  <name>ARMCM7</name>                                             <!-- name of part-->
  <series>ARMCM</series>                                          <!-- device series the device belongs to -->
  <version>1.2</version>                                          <!-- version of this description, adding CMSIS-SVD 1.1 tags -->
  <description>ARM 32-bit Cortex-M3 Microcontroller based device, CPU clock up to 80MHz, etc. </description>
  <licenseText>                                                   <!-- this license text will appear in header file. \n force line breaks -->
    ARM Limited (ARM) is supplying this software for use with Cortex-M\n
    processor based microcontroller, but can be equally used for other\n
    suitable  processor architectures. This file can be freely distributed.\n
    Modifications to this file shall be clearly marked.\n
    \n
    THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED\n
    OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF\n
    MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.\n
    ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR\n
    CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  </licenseText>
  <cpu>                                                           <!-- details about the cpu embedded in the device -->
    <name>CM7</name>
    <revision>r0p0</revision>
    <endian>little</endian>
    <mpuPresent>false</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <nvicPrioBits>3</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>8</addressUnitBits>                            <!-- byte addressable memory -->
  <width>32</width>                                               <!-- bus width is 32 bits -->
  <!-- default settings implicitly inherited by subsequent sections -->
  <size>32</size>                                                 <!-- this is the default size (number of bits) of all peripherals
                                                                       and register that do not define "size" themselves -->
  <access>read-write</access>                                     <!-- default access permission for all subsequent registers -->
  <resetValue>0x00000000</resetValue>                             <!-- by default all bits of the registers are initialized to 0 on reset -->
  <resetMask>0xFFFFFFFF</resetMask>                               <!-- by default all 32Bits of the registers are used -->

  <peripherals>
    <peripheral>
      <name>SysTick</name>
      <description>24Bit System Tick Timer for use in RTOS</description>
      <baseAddress>0xE000E010</baseAddress>
      <prependToName>SYST_</prependToName>

      <addressBlock>
        <offset>0</offset>
        <size>0x10</size>
        <usage>registers</usage>
      </addressBlock>

      <registers>
        <register>
          <name>CSR</name>
          <description>SysTick Control and Status Register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <resetValue>0x4</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENABLE</name>
              <description>Enable SysTick Timer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>disabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>enabled</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TICKINT</name>
              <description>Generate Tick Interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable SysTick Exception</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable SysTick Exception</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLKSOURCE</name>
              <description>Source to count from</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>External_Clk</name>
                  <description>External Clock</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CPU_Clk</name>
                  <description>CPU Clock</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COUNTFLAG</name>
              <description>SysTick counted to zero</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVR</name>
          <description>SysTick Reload Value Register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RELOAD</name>
              <description>Value to auto reload SysTick after reaching zero</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CVR</name>
          <description>SysTick Current Value Register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT</name>
              <description>Current value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CALIB</name>
          <description>SysTick Calibration Value Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <resetValue>0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TENMS</name>
              <description>Reload value to use for 10ms timing</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SKEW</name>
              <description>Clock Skew</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Exact</name>
                  <description>10ms calibration value is exact</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inexact</name>
                  <description>10ms calibration value is inexact, because of the clock frequency</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOREF</name>
              <description>No Ref</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ref_Clk_Available</name>
                  <description>Ref Clk available</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Ref_Clk_Unavailable</name>
                  <description>Ref Clk not available</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>ACTLR</name>
      <description>System control block</description>
      <groupName>SCB</groupName>
      <baseAddress>0xE000E008</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x08</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>ACTLR</name>
          <description>Auxiliary Control Register.
          The ACTLR provides disable bits for the following processor
          functions: FPU exception outputs, Dual-issue functionality,
          Flushing of the trace output from the ITM and DWT, Dynamic read
          allocate mode. By default this register is set to provide optimum
          performance from the Cortex-M7 processor, and does not normally
          require modification.</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DISFOLD</name>
              <description>Disables Interruption Folding</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Interruption folding enabled</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Interruption folding disabled</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PFEXCODIS</name>
              <description>Disabled FPU exception outputs</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>FPU exception outputs are disabled.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISRAMODE</name>
              <description>Disables dynamic read allocate mode for Write-Back
              Write-Allocate memory regions:</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Dynamic disabled.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISITMATBFLUSH</name>
              <description>Disables ITM and DWT ATB flush:</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>ITM and DWT ATB flush disabled. AFVALID is
                  ignored and AFREADY is held HIGH.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISBTACREAD</name>
              <description>Disables the Branch Target Address Cache (BTAC):
              </description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>BTAC is not used and only static branch
                  prediction can occur.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISBTACALLOC</name>
              <description>Disables the Branch Target Address Cache allocation:
              </description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>No new entries are allocated in BTAC,
                  but existing entries can be updated.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISCRITAXIRUR</name>
              <description>Disables critical AXI Read-Under-Read:
              </description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>An AXI read to Strongly-ordered or device
                  memory, or an LDREX to shared memory, is not put on AXI if
                  there are any outstanding reads on AXI. Transactions on
                  AXI cannot be interrupted. This bit might reduce the time
                  that these transactions are in progress and might improve
                  worst case interrupt latency. Performance is decreased when
                  this bit is set.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISDI_DB</name>
              <description>Disables dual-issued direct branches:
              </description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Direct branches instruction type cannot be
                  dual-issued in channel 0</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISDI_IB</name>
              <description>Disables dual-issued indirect branches:
              </description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Indirect branches, but not loads to PC
                  instruction type cannot be dual-issued in channel 0
                  </description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISDI_LPC</name>
              <description>Disables dual-issued loads to PC:
              </description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Loads to PC instruction type cannot be
                  dual-issued in channel 0
                  </description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISDI_MAC_MUL</name>
              <description>Disables integer MAC and MUL dual-issued
              instructions:
              </description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Integer MAC and MUL instruction type cannot be
                  dual-issued in channel 0
                  </description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISDI_VFP</name>
              <description>Disables VFP dual-issued instruction:
              </description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>VFP instruction type cannot be
                  dual-issued in channel 0
                  </description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISISSCH1_DB</name>
              <description>Disables direct branches instructions in channel 1:
              </description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Direct branches instruction type cannot be
                  issued in channel 1</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISISSCH1_IB</name>
              <description>Disables indirect branches instructions in channel 1:
              </description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Indirect branches, but not loads to PC
                  instruction type cannot be issued in channel 1
                  </description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISISSCH1_LPC</name>
              <description>Disables loads to PC instructions in channel 1:
              </description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Loads to PC instruction type cannot be
                  issued in channel 1
                  </description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISISSCH1_MAC_MUL</name>
              <description>Disables integer MAC and MUL instructions in
              channel 1:
              </description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Integer MAC and MUL instruction type cannot be
                  issued in channel 1
                  </description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISISSCH1_VFP</name>
              <description>Disables VFP instructions in channel 1:
              </description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>VFP instruction type cannot be
                  issued in channel 1
                  </description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISDYNADD</name>
              <description>Disables dybnamic allocation of ADD ans SUB
              instructions:
              </description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation. Some ADD and SUB instructions
                  are resolved in EX1.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>All ADD and SUB instructions are resolved in EX2.
                  </description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>SCB</name>
      <description>System control block</description>
      <groupName>SCB</groupName>
      <baseAddress>0xE000ED00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x40</size>
        <usage>registers</usage>
      </addressBlock>

      <registers>
        <register>
          <name>CPUID</name>
          <description>CPUID Base Register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <resetValue>0x411FC271</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Revision</name>
              <description>Revision number, the p value in the rnpn product revision identifier.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>p0</name>
                  <description>Patch 0</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>p1</name>
                  <description>Patch 1</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>p2</name>
                  <description>Patch 2</description>
                  <value>2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PartNo</name>
              <description>Part number of the processor.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cortex_M7</name>
                  <description>Cortes-M7</description>
                  <value>0xC27</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>Constant</name>
              <description>Reads as 0xF.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Variant</name>
              <description>Variant number, the r value in the rnpn product revision identifier.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>r0</name>
                  <description>Revision 0</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>r1</name>
                  <description>Revision 1</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>Implementer</name>
              <description>Implementer code.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ARM</name>
                  <description>ARM</description>
                  <value>0x41</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ICSR</name>
          <description>Interrupt Control and State Register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VECTACTIVE</name>
              <description>Contains the active exception number.
                Subtract 16 from this value to obtain the CMSIS IRQ number required to index into the
                Interrupt Clear-Enable, Set-Enable, Clear-Pending, Set-Pending or Priority Registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RETTOBASE</name>
              <description>Indicates whether there are preempted active exceptions.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Preempted</name>
                  <description>There are preempted active exceptions to execute.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_Preempted</name>
                  <description>There are no active exceptions, or the currently-executing exception
                    is the only active exception.</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VECTPENDING</name>
              <description>Indicates the exception number of the highest priority pending
                enabled exception.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ISRPENDING</name>
              <description>Interrupt pending flag, excluding NMI and Faults</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PENDSTCLR</name>
              <description>SysTick exception clear-pending bit.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PENDSTSET</name>
              <description>SysTick exception set-pending bit.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PENDSVCLR</name>
              <description>PendSV clear-pending bit.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PENDSVSET</name>
              <description>PendSV set-pending bit.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NMIPENDSET</name>
              <description>NMI set-pending bit.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VTOR</name>
          <description>Vector Table Offset Register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBLOFF</name>
              <description>Vector table base offset field. It contains bits [29:7] of the
                offset of the table base from the bottom of the memory map. The lower bit
                in the TBLOFF field is implementation defined.

                When setting TBLOFF, you must align the offset of the number of exception entries
                in the vector table. The minimum alignment is 32 words, enough for up to 16 interupts.
                For more interrupts, adjust the alignment by rounding up to the next power of two.
                For example, if you require 21 interrupts, the alignment must be on a 64-word boundary
                because the required table size is 37 words, and the next power of two is 64.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AIRCR</name>
          <description>Application Interrupt and Reset Control Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <resetValue>0xFA050000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYSRESETREQ</name>
              <description>System reset request bit setting is implementation defined.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PRIGROUP</name>
              <description>Interrupt priority grouping field. This field determines the split of
                group priority from subpriority.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Bxxxxxxx_y</name>
                  <description>Group priority bits: [7:1], subpriority bits [0]</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bxxxxxx_yy</name>
                  <description>Group priority bits: [7:2], subpriority bits [1:0]</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bxxxxx_yyy</name>
                  <description>Group priority bits: [7:3], subpriority bits [2:0]</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bxxxx_yyyy</name>
                  <description>Group priority bits: [7:4], subpriority bits [3:0]</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bxxx_yyyyy</name>
                  <description>Group priority bits: [7:5], subpriority bits [4:0]</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bxx_yyyyyy</name>
                  <description>Group priority bits: [7:6], subpriority bits [5:0]</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bx_yyyyyyy</name>
                  <description>Group priority bits: [7], subpriority bits [6:0]</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>B_yyyyyyyy</name>
                  <description>Group priority bits: None, subpriority bits [7:0]</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENDIANNESS</name>
              <description>Data endianness bit setting is implementation defined.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Little_Endian</name>
                  <description>Data is little endian</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Big_Endian</name>
                  <description>Data is big endian</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VECTKEY</name>
              <description>Register key. On write, write 0x5FA to VECTKEY, otherwise
                the write is ignored. Reads as 0xFA05</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Key</name>
                  <description>The write key</description>
                  <value>0x05FA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Key_Read</name>
                  <description>The read key</description>
                  <value>0xFA05</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR</name>
          <description>System Control Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SLEEPONEXIT</name>
              <description>Indicates sleep-on-exit when returning from Handler mode to Thread mode</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLEEPDEEP</name>
              <description>Controls whether the processor uses sleep or deep sleep as its
                low-power mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEVONPEND</name>
              <description>Send event on pending bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR</name>
          <description>Configuration and Control Register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NONBASETHERADENA</name>
              <description>Indicates how the processor enters Thread mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Active_Exception</name>
                  <description>Processor can enter Thread mode only when no exception is active</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>On_Exc_Return</name>
                  <description>Processor can enter Thread mode from any level under the control of
                    an EXC_RETURN value</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USERSETMPEND</name>
              <description>Enables unprivileged software access to the STIR</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UNALIGNED_TRP</name>
              <description>Enables unalign access traps.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIV0_TRP</name>
              <description>Enables faulting or halting when the processor executes an SDIF or
                UDIV instruction with a divisor of 0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BFHFNMIGN</name>
              <description>Enables handlers with priority -1 or -2 to ignore data
                BusFaults caused by load and store instructions. This applies to the
                hard fault, NMI, and FAULTMASK escalated handlers.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STKALIGN</name>
              <description>Always reads-as-one. It indicates stack alignment on exception
                entry is 8-byte aligned.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DC</name>
              <description>Enables L1 data cache.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC</name>
              <description>Enables L1 instruction cache.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHPR1</name>
          <description>System Handler Priority Register 1</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PRI_4</name>
              <description>Priority of the system handler, MemManage</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_5</name>
              <description>Priority of the system handler, BusFault</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_6</name>
              <description>Priority of the system handler, UsageFault</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHPR2</name>
          <description>System Handler Priority Register 2</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PRI_11</name>
              <description>Priority of the system handler, SVCall</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHPR3</name>
          <description>System Handler Priority Register 3</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PRI_14</name>
              <description>Priority of the system handler, PendSV</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_15</name>
              <description>Priority of the system handler, SysTick</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHPRS</name>
          <description>System Handler Control and State Register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MEMFAULTACT</name>
              <description>MemManage exception active bit, reads as 1 if exception is active.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSFAULTACT</name>
              <description>BusFault exception active bit, reads as 1 if exception is active.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USGFAULTACT</name>
              <description>UsageFault exception active bit, reads as 1 if exception is active.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SVCALLACT</name>
              <description>SVCall active bit, reads as 1 if exception is active.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MONITORACT</name>
              <description>Debug Monitor active bit, reads as 1 if exception is active.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PENDSVACT</name>
              <description>PendSV exception active bit, reads as 1 if exception is active.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYSTICKACT</name>
              <description>Systick exception active bit, reads as 1 if exception is active.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USGFAULTPENDED</name>
              <description>UsageFault exception pending bit, reads as 1 if exception is pending</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEMFAULTPENDED</name>
              <description>MemManage exception pending bit, reads as 1 if exception is pending</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSFAULTPENDED</name>
              <description>BusFault exception pending bit, reads as 1 if exception is pending</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SVCALLPENDED</name>
              <description>SVCall pending bit, reads as 1 if exception is pending</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEMFAULTENA</name>
              <description>MemManage enable bit, set to 1 to enable</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BUSFAULTENA</name>
              <description>BusFault enable bit, set to 1 to enable</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USGFAULTENA</name>
              <description>UsageFault enable bit, set to 1 to enable</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MMSR</name>
          <description>MemManage Fault Status Register</description>
          <addressOffset>0x28</addressOffset>
          <size>8</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>IACCVIOL</name>
              <description>Instruction access violation flag</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DACCVIOL</name>
              <description>Data access violation flag</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUNSTKERR</name>
              <description>MemManage fault on unstacking for a return from exception</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSTKERR</name>
              <description>MemManage fault on stacking for exception entry</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MLSPERR</name>
              <description>MemManage fault during floating-point lazy state preservation.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MMARVALID</name>
              <description>MemManage fault address register valid flag.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BFSR</name>
          <description>BusFault Status Register</description>
          <addressOffset>0x29</addressOffset>
          <size>8</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>IBUSERR</name>
              <description>Instruction bus error</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRECISERR</name>
              <description>Precise data bus error</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IMPRECISERR</name>
              <description>Precise data bus error</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UNSTKERR</name>
              <description>BusFault on unstacking for a return from exception.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STKERR</name>
              <description>BusFault on stacking for exception entry.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSPERR</name>
              <description>BusFault on floating-point lazy state preservation.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BFARVALID</name>
              <description>BusFault Address Register valid flag.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UFSR</name>
          <description>UsageFault Status Register</description>
          <addressOffset>0x2A</addressOffset>
          <size>16</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>UNDEFINSTR</name>
              <description>Undefined instruction UsageFault</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INVSTATE</name>
              <description>Invalid State UsageFault</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INVPC</name>
              <description>Invalid PC load UsageFault, caused by an invalid PC load by EXC_RETURN</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOCP</name>
              <description>No coprocessor UsageFault</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UNALIGNED</name>
              <description>Unaligned access UsageFault</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIVBYZERO</name>
              <description>Divide by zero UsageFault.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HFSR</name>
          <description>HardFault Status Register</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VECTTBL</name>
              <description>Indicates a BusFault on a vector table read during exception processing.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCED</name>
              <description>Indicates a forced hard fault, generated by escalation of a fault
                with configurable priority that cannot be handled, either because of priority or
                because it is disabled.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEBUGEVT</name>
              <description>Reserved for Debug use. When writing to the register, you must write 1
                to this bit, otherwise behavior is UNPREDICTABLE.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MMAR</name>
          <description>MemManage Fault Address Register</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDRESS</name>
              <description></description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BFAR</name>
          <description>BusFault Address Register</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDRESS</name>
              <description></description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>PF</name>
      <description>Processor Features</description>
      <baseAddress>0xE000ED78</baseAddress>
      <groupName>SCB</groupName>
      <addressBlock>
        <offset>0</offset>
        <size>0x10</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CLIDR</name>
          <description>Cache Level ID Register</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x09000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ICL1</name>
              <description>An instrumentation Cache is implemented at L1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCL1</name>
              <description>Data Cache is implemented at L1</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UCL1</name>
              <description>Unified Cache is implemented at L1</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LoC</name>
              <description>Level of Coherency</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1, if neither instruction nor data cache is implemented</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2, if either cache is implemented</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LoU</name>
              <description>Level of Unification</description>
              <bitOffset>27</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1, if neither instruction nor data cache is implemented</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2, if either cache is implemented</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CTR</name>
          <description>Cache Type Register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x8303C003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IMinLine</name>
              <description>Smallest cache line of all the instruction caches.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Line_8_Words</name>
                  <description>8 words for the Cortex-M7 processor.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMinLine</name>
              <description>Smallest cache line of all the data caches.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Line_8_Words</name>
                  <description>8 words for the Cortex-M7 processor.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERG</name>
              <description>Exclusive Reservation Granule.
              The local monitor within the processor does not hold any physical
              address. It treats any STREX instruction access as matching the
              address of the previous LDREX instruction. This means that the
              implemented exclusive reservation granule is the entire memory
              address range.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CWG</name>
              <description>Cache Writable Granule.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Granularity_8_Words</name>
                  <description>8 words granularity for the Cortex-M7
                  processor.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>Format</name>
              <description>Cache Writable Granule.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ARMv7</name>
                  <description>ARMv7 register forat.</description>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CCSIDR</name>
          <description>Cache Size ID Register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LineSize</name>
              <description>Indicates the number of words in each cache line.
                Encoded as 2 - log(2) number of words.
                e.g. 0 means 4 words, 1 means 8 words.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Associativity</name>
              <description>Indicates the number of ways as (ways - 1)</description>
              <bitOffset>3</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NumSets</name>
              <description>Indicates the number of sets as (sets - 1)</description>
              <bitOffset>13</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WA</name>
              <description>Indicates support available for write allocation.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RA</name>
              <description>Indicates support available for read allocation.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WB</name>
              <description>Indicates support available for write back.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WT</name>
              <description>Indicates support available for write through.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCSELR</name>
          <description>Cache Size Selection Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>InD</name>
              <description>Selects the cache currently visible in the CCSIDR.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Data_Cache</name>
                  <description>Data cache is selected.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Instruction_Cache</name>
                  <description>Instruction cache is selected.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>Level</name>
              <description>Identifies the cache level selected.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1 cache is selected.</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>MPU</name>
      <description>Memory Protection Unit</description>
      <baseAddress>0xE000ED90</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x30</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>MPU_TYPE</name>
          <description>MPU Type Register</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SEPARATE</name>
              <description>Indicates support for unified or separate instruction
                and data memory maps.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unified</name>
                  <description>Only unified memory maps are supported.</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DREGION</name>
              <description>Indicates the number of supported MPU data regions depending
                on your implementation.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IREGION</name>
              <description>Indicates the number of supported MPU instruction regions. Always
                contains 0x0: the MPU memory map is unified and is described by the DREGION
                field.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_CTRL</name>
          <description>MPU Control Register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENABLE</name>
              <description>Enables the optional MPU.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HFNMIENA</name>
              <description>Enables the operation of MPU during hard fault, NMI,
                and FAULTMASK handlers.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRIVDEFENA</name>
              <description>Enables privileged software access to the default memory map.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RNR</name>
          <description>MPU Region Number Register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REGION</name>
              <description>Indicates the MPU region referenced by the MPU_RBAR and MPU_RASR
                registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RBAR</name>
          <description>MPU Region Base Address Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REGION</name>
              <description>On Write, see the VALID field. On read, specifies the region number.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VALID</name>
              <description>MPU Region number valid bit. Depending on your implementation, this has the
                following effect: 0 - either updates the base address for the region specified by MPU_RNR or ignores the value of the REGION field. 1 - either updates the value of the MPU_RNR to the value of the REGION field or updates the base address for the region specified in the REGION field.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR</name>
              <description>The ADDR field is bits[31:N] of the MPU_RBAR. The region size, as specified by the SIZE field in the MPU_RASR, defines the value of N:
                N = Log2(Region size in bytes).
                If the region size is configured to 4GB, in the MPU_RASR, there is no valid ADDR field. In
                this case, the region occupies the complete memory map, and the base address is 0x00000000. The base address is aligned to the size of the region. For example, a 64KB region must be
                aligned on a multiple of 64KB, for example, at 0x00010000 or 0x00020000.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RASR</name>
          <description>MPU Region Base Attribute and Size Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ENABLE</name>
              <description>Region enable bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIZE</name>
              <description>Specifies the size of the MPU protection region. Minimum value is 4.
                The Region size is defined as (Region size in bytes) = 2^(SIZE+1)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRD0</name>
              <description>Subregion disable bits</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRD1</name>
              <description>Subregion disable bits</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRD2</name>
              <description>Subregion disable bits</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRD3</name>
              <description>Subregion disable bits</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRD4</name>
              <description>Subregion disable bits</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRD5</name>
              <description>Subregion disable bits.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRD6</name>
              <description>Subregion disable bits.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRD7</name>
              <description>Subregion disable bits.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>B</name>
              <description>Memory access attribute.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>C</name>
              <description>Memory access attribute.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>S</name>
              <description>Shareable bit. Applies to Normal memory only.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEX</name>
              <description>Memory access attribute.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AP</name>
              <description>Access permission field</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Access</name>
                  <description>All accesses generate a permission fault.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Privileged_RW</name>
                  <description>Access from privileged software only.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unpriviledged_RO</name>
                  <description>Writes by unprivileged software generates a permission fault.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_Access</name>
                  <description>Full Access.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Privileged_RO</name>
                  <description>Reads by privileged software only.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Read_Only</name>
                  <description>Read_Only by privileged or unprivileged software.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Read_Only</name>
                  <description>Read_Only by privileged or unprivileged software.</description>
                  <value>0x6</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XN</name>
              <description>Instruction access disable bit</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>I_Enabled</name>
                  <description>Instruction fetches enabled.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I_Disabled</name>
                  <description>Instruction fetches disabled.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register derivedFrom="MPU_RBAR">
          <name>MPU_RBAR_A1</name>
          <description>Uses (MPU_RNR[7:2]&lt;&lt;2) + 1</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
        </register>
        <register derivedFrom="MPU_RASR">
          <name>MPU_RASR_A1</name>
          <description>Uses (MPU_RNR[7:2]&lt;&lt;2) + 1</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
        </register>
        <register derivedFrom="MPU_RBAR">
          <name>MPU_RBAR_A2</name>
          <description>Uses (MPU_RNR[7:2]&lt;&lt;2) + 2</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
        </register>
        <register derivedFrom="MPU_RASR">
          <name>MPU_RASR_A2</name>
          <description>Uses (MPU_RNR[7:2]&lt;&lt;2) + 2</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
        </register>
        <register derivedFrom="MPU_RBAR">
          <name>MPU_RBAR_A3</name>
          <description>Uses (MPU_RNR[7:2]&lt;&lt;2) + 3</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
        </register>
        <register derivedFrom="MPU_RASR">
          <name>MPU_RASR_A3</name>
          <description>Uses (MPU_RNR[7:2]&lt;&lt;2) + 3</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>FPU</name>
      <description>Floating Point Unit</description>
      <baseAddress>0xE000ED88</baseAddress>

      <addressBlock>
        <offset>0</offset>
        <size>0x1B8</size>
        <usage>registers</usage>
      </addressBlock>

      <registers>
        <register>
          <name>CPACR</name>
          <description>Coprocessor Access Control Register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CP10</name>
              <description>Access privileges for coprocessor 10.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Access_Denied</name>
                  <description>Any attempted access generates a NOCP
                  UsageFault.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Privileged</name>
                  <description>Privileged access only. An unprivileged
                  addess generates a NOCP
                  UsageFault.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_Access</name>
                  <description>Full access.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CP11</name>
              <description>Access privileges for coprocessor 11.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Access_Denied</name>
                  <description>Any attempted access generates a NOCP
                  UsageFault.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Privileged</name>
                  <description>Privileged access only. An unprivileged
                  addess generates a NOCP
                  UsageFault.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_Access</name>
                  <description>Full access.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FPCCR</name>
          <description>Floating-Point Context Control Register</description>
          <addressOffset>0x1AC</addressOffset>
          <size>32</size>
          <resetValue>0xC0000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LSPACT</name>
              <description>Lazy state preservation activation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USER</name>
              <description>If set, privilege level was user when the
              floating-point stack frame was allocated.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>THREAD</name>
              <description>If set, the mode was Thread Mode when the
              floating-point stack frame was allocated.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HFRDY</name>
              <description>If set, priority permitted setting the HardFault
              handler to the pending state when the floating-point stack
              frame was allocated.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MMRDY</name>
              <description>If set, MemManage is enabled and priority permitted
              setting the MemManage handler to the pending state when the
              floating-point stack frame was allocated.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BFRDY</name>
              <description>If set, BusFault is enabled and priority permitted
              setting the BusFault handler to the pending state when the
              floating-point stack frame was allocated.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MONRDY</name>
              <description>If set, DebugMonitor is enabled and priority
              permitted setting the DebugMonitor handler to the pending state
              when the floating-point stack frame was allocated.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LSPEN</name>
              <description>Enables automatic lazy state preservation for
              floating-point context.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ASPEN</name>
              <description>Enables CONTROL.FPCA setting on execution of
              a floating point instruction. This results in automatic
              hardware state preservation and restoration, for floating-point
              context, on exception entry and exit.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FPCAR</name>
          <description>Floating-Point Context Address Register</description>
          <addressOffset>0x1B0</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDRESS</name>
              <description>The FPCAR register holds the location of the
              unpopulated floating-point register space allocated on an
              exception stack frame.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FPDSCR</name>
          <description>Floating-Point Default Status Control Register</description>
          <addressOffset>0x1B4</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RMode</name>
              <description>Default value for FPSCR.RMode.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FZ</name>
              <description>Default value for FPSCR.FZ.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DN</name>
              <description>Default value for FPSCR.DN.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHP</name>
              <description>Default value for FPSCR.AHP.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>Cache</name>
      <description>Cache maintenance operations</description>
      <baseAddress>0xE000EF50</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x2C</size>
        <usage>registers</usage>
      </addressBlock>

      <registers>
        <register>
          <name>ICIALLU</name>
          <description>Instruction cache invalidate all to the PoU</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>write-only</access>
        </register>
        <register>
          <name>ICIMVAU</name>
          <description>Instruction cache invalidate by address to the PoU</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>write-only</access>
        </register>
        <register>
          <name>DCIMVAC</name>
          <description>Data cache invalidate by address to the PoC</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>write-only</access>
        </register>
        <register>
          <name>DCISW</name>
          <description>Data cache invalidate by set/way</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>write-only</access>
          <fields>
            <field>
              <name>Set</name>
              <description>Set/index that operation applies to. The number of
              indices in a cache depends on the configured cache size. When
              this is less than the maximum, use the LSB of this field.
              </description>
              <bitOffset>5</bitOffset>
              <bitWidth>9</bitWidth>
            </field>
            <field>
              <name>Way</name>
              <description>Way that operation applies to. For the data cache,
              values 0, 1, 2 and 3 are supported..
              </description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>DCCMVAU</name>
          <description>Data cache clean by address to the PoU</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>write-only</access>
        </register>
        <register>
          <name>DCCMVAC</name>
          <description>Data cache clean by address to the PoC</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>write-only</access>
        </register>
        <register>
          <name>DCCSW</name>
          <description>Data cache clean by set/way</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>write-only</access>
          <fields>
            <field>
              <name>Set</name>
              <description>Set/index that operation applies to. The number of
              indices in a cache depends on the configured cache size. When
              this is less than the maximum, use the LSB of this field.
              </description>
              <bitOffset>5</bitOffset>
              <bitWidth>9</bitWidth>
            </field>
            <field>
              <name>Way</name>
              <description>Way that operation applies to. For the data cache,
              values 0, 1, 2 and 3 are supported..
              </description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>DCCIMVAC</name>
          <description>Data cache clean and invalidate by address to the PoC</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>write-only</access>
        </register>
        <register>
          <name>DCCISW</name>
          <description>Data cache clean and invalidate by set/way</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>write-only</access>
          <fields>
            <field>
              <name>Set</name>
              <description>Set/index that operation applies to. The number of
              indices in a cache depends on the configured cache size. When
              this is less than the maximum, use the LSB of this field.
              </description>
              <bitOffset>5</bitOffset>
              <bitWidth>9</bitWidth>
            </field>
            <field>
              <name>Way</name>
              <description>Way that operation applies to. For the data cache,
              values 0, 1, 2 and 3 are supported..
              </description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
            </field>
          </fields>
        </register>
     </registers>
    </peripheral>

    <peripheral>
      <name>AccessCtrl</name>
      <description>Access Control</description>
      <baseAddress>0xE000EF90</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1C</size>
        <usage>registers</usage>
      </addressBlock>

      <registers>
        <register>
          <name>ITCMCR</name>
          <description>Instruction Tightly-Coupled Memory Control Register</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>read-write</access>
          <fields>
            <field>
              <name>EN</name>
              <description>TCM enable. When a TCM is disabled all accesses are
              made to the AXI master.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RMW</name>
              <description>Read-Modify-Write enable. Indicates that all
              sub-chunk writes to a given TCM use a RMW sequence.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RETEN</name>
              <description>Retry phase enable. When enabled the processor
              guarantees to honor the retry output on the corresponding
              TCM interface.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>SZ</name>
              <description>TCM size. Indicates the size of the relevant TCM.
              The values that apply depend on your implementation.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_TCM</name>
                  <description>No TCM implemented.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_4KB</name>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_8KB</name>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_16KB</name>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_32KB</name>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_64KB</name>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_128KB</name>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_256KB</name>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_512KB</name>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_1M</name>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_2M</name>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_4M</name>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_8M</name>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ITCM_16M</name>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DTCMCR</name>
          <description>Data Tightly-Coupled Memory Control Register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>read-write</access>
          <fields>
            <field>
              <name>EN</name>
              <description>TCM enable. When a TCM is disabled all accesses are
              made to the AXI master.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RMW</name>
              <description>Read-Modify-Write enable. Indicates that all
              sub-chunk writes to a given TCM use a RMW sequence.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RETEN</name>
              <description>Retry phase enable. When enabled the processor
              guarantees to honor the retry output on the corresponding
              TCM interface.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>SZ</name>
              <description>TCM size. Indicates the size of the relevant TCM.
              The values that apply depend on your implementation.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_TCM</name>
                  <description>No TCM implemented.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_4KB</name>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_8KB</name>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_16KB</name>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_32KB</name>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_64KB</name>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_128KB</name>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_256KB</name>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_512KB</name>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_1M</name>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_2M</name>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_4M</name>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_8M</name>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DTCM_16M</name>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBPCR</name>
          <description>AHBP Control Register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>read-write</access>
          <fields>
            <field>
              <name>EN</name>
              <description>AHBP enable: when disabled, all accesses are made to
              the AXI master.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>SZ</name>
              <description>AHBP size. The values that apply depend on your
              implementation.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AHBP_64MB</name>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AHBP_128MB</name>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AHBP_256MB</name>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AHBP_512MB</name>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CACR</name>
          <description>L1 Cache Control Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>read-write</access>
          <fields>
            <field>
              <name>SIWT</name>
              <description>Shared cacheable-is-WT for data cache. Enables
              cache coherency usage.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Non_Cacheable</name>
                  <value>0x0</value>
                  <description>Normal Cacheable Shared locations are treated as
                  being Non-cacheable. Programmed inner cacheability attributes
                  are ignored. This is the default mode of operation for Shared
                  memory. The data cache is transparent to software for these
                  locations and therefore no software maintenance is required
                  to maintain coherency.</description>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WT_Cacheable</name>
                  <value>0x1</value>
                  <description>Normal Cacheable shared locations are treated as
                  Write-Through. Programmed inner cacheability attributes are
                  ignored. All writes are globally visible. Other memory agent
                  updates are not visible to Cortex-M7 processor software
                  without suitable cache maintenance.
                  Useful for heterogeneous MP-systems where, for example, the
                  Cortex-M7 processor is integrated on the Accelerator
                  Coherency Port (ACP) interface on an MP-capable processor.
                  </description>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECCDIS</name>
              <description>Disables ECC in the instruction and data cache.
              </description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC_Enabled</name>
                  <value>0x0</value>
                  <description>Enables ECC in the instruction and data cache.
                  This is RAO/WI if both data cache and instruction cache are
                  excluded or if ECC is excluded.</description>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECC_Disabled</name>
                  <value>0x1</value>
                  <description>Disables ECC in the instruction and data cache.
                  This is RAZ/WI if data cache is not configured.</description>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FORCEWT</name>
              <description>Enables Force Write-Through in the data cache.
              When set, all Cacheable memory regions are treated as
              Write-Through.
              </description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBSCR</name>
          <description>AHB Slave Control Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>read-write</access>
        </register>
        <register>
          <name>ABFSR</name>
          <description>Auxiliary Bus Fault Status Register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <access>read-write</access>
          <fields>
            <field>
              <name>ITCM</name>
              <description>Asynchronous fault on the ITCM interface.
              </description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>DTCM</name>
              <description>Asynchronous fault on the DTCM interface.
              </description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>AHBP</name>
              <description>Asynchronous fault on the AHBP interface.
              </description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>AXIM</name>
              <description>Asynchronous fault on the AXIM interface.
              </description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>EPPB</name>
              <description>Asynchronous fault on the EPPB interface.
              </description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>AXIMTYPE</name>
              <description>Indicates the type of fault on the AXIM interface.
              </description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OKAY</name>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXOKAY</name>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLVERR</name>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DECERR</name>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>WDT</name>
      <description>Watchdog Timer</description>
      <baseAddress>0x40001000</baseAddress>

      <addressBlock>
        <offset>0</offset>
        <size>0x10</size>
        <usage>registers</usage>
      </addressBlock>

      <interrupt>
        <name>WDT</name>
        <value>1</value>
      </interrupt>

      <registers>
        <register>
          <name>CSR</name>
          <description>Watchdog Control and Status Register</description>
          <addressOffset>0</addressOffset>
          <size>32</size>
          <resetValue>0x4</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>
